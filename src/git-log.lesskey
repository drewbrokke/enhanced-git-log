#command

# Simpler movement on short logs
j   forw-line-force

# This command is mainly for testing purposes. It
# allows passing in arbitrary commands to the
# less-git-tools script.
c   pipe . less-git-tools  \b

# These commands will invoke immediately on the
# commit on the top line.
\   pipe . less-git-tools show \r
d   pipe . less-git-tools diff \r
i   pipe . less-git-tools issue \r
l   pipe . less-git-tools files \r
m   pipe . less-git-tools modules \r
o   pipe . less-git-tools open \r
p   pipe . less-git-tools pull-request \r
t   pipe . less-git-tools difftool \r
x   pipe . less-git-tools yank \r
y   pipe . less-git-tools yank \r

C   pipe . less-git-tools cherry-pick \r
F   pipe . less-git-tools fixup \r
I   pipe . less-git-tools rebase \r
P   pipe . less-git-tools format-patch \r
R   pipe . less-git-tools revert \r

# These commands will invoke immediately and pass in the clipboard contents as
# an argument. This is designed to be used in conjunction with the 'yank'
# commands above to perform commands on a range of commits.
\td   pipe . less-git-tools diff "$({{PASTE_COMMAND}})" \r
\tl   pipe . less-git-tools files "$({{PASTE_COMMAND}})" \r
\tm   pipe . less-git-tools modules "$({{PASTE_COMMAND}})" \r
\to   pipe . less-git-tools open "$({{PASTE_COMMAND}})" \r
\tt   pipe . less-git-tools difftool "$({{PASTE_COMMAND}})" \r

\tC   pipe . less-git-tools cherry-pick "$({{PASTE_COMMAND}})" \r
\tP   pipe . less-git-tools format-patch "$({{PASTE_COMMAND}})" \r
\tR   pipe . less-git-tools revert "$({{PASTE_COMMAND}})" \r


#line-edit


#env
